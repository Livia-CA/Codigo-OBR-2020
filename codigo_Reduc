texto tri = ""
texto robo = ""


tarefa gpsTri {
    tri = ""
    se ((direcao() >= 0 e direcao() <= 45) ou (direcao() > 315 e direcao() <= 360)) entao {
        escrever(1, "Norte")
        tri = "N"
    }
    se ((direcao() > 45 e direcao() <= 135)) entao {
        escrever(1, "Leste")
        tri = "L"
    }
    se ((direcao() >135 e direcao() <= 225)) entao {
        escrever(1, "Sul")
        tri = "S"
    }
    se ((direcao() > 225 e direcao() <= 315)) entao {
        escrever(1, "Oeste")
        tri = "O"
    }
}

###################################################################

tarefa gpsRobo {
    robo = ""
    se ((direcao() >= 0 e direcao() <= 45) ou (direcao() > 315 e direcao() <= 360)) entao {
        escrever(1, "Norte")
        robo = "N"
    }
    se ((direcao() > 45 e direcao() <= 135)) entao {
        escrever(1, "Leste")
        robo = "L"
    }
    se ((direcao() >135 e direcao() <= 225)) entao {
        escrever(1, "Sul")
        robo = "S"
    }
    se ((direcao() > 225 e direcao() <= 315)) entao {
        escrever(1, "Oeste")
        robo = "O"
    }
}

###################################################################

tarefa orientar{
    se (tri == robo) entao {
        enquanto (ultra(1) > 10) farei {
            frente(300)
        }
        rotacionar(300, negativo(90))
    }
    se (((robo == "N") e (tri == "L")) ou ((robo == "L") e (tri == "S")) ou ((robo == "S") e (tri == "O")) ou ((robo == "O") e (tri == "N"))) entao {
        enquanto (ultra(1) > 10) farei {
            frente(300)
        }
        rotacionar(300, 90)
    }
    se (((robo == "L") e (tri == "N")) ou ((robo == "S") e (tri == "L")) ou ((robo == "O") e (tri == "S")) ou ((robo == "N") e (tri == "O"))) entao {
        rotacionar(300, 90)
    }
    se (((robo == "L") e (tri == "O")) ou ((robo == "S") e (tri == "N")) ou ((robo == "O") e (tri == "L")) ou ((robo == "N") e (tri == "S"))) entao {
        rotacionar(300, negativo(90))
    }
}

###################################################################

tarefa ori{
    se (tri == robo) entao {
        rotacionar(300, negativo(90))
    }
    se (((robo == "N") e (tri == "L")) ou ((robo == "L") e (tri == "S")) ou ((robo == "S") e (tri == "O")) ou ((robo == "O") e (tri == "N"))) entao {
        rotacionar(300, 90)
    }
    se (((robo == "L") e (tri == "N")) ou ((robo == "S") e (tri == "L")) ou ((robo == "O") e (tri == "S")) ou ((robo == "N") e (tri == "O"))) entao {
        rotacionar(300, 90)
    }
    se (((robo == "L") e (tri == "O")) ou ((robo == "S") e (tri == "N")) ou ((robo == "O") e (tri == "L")) ou ((robo == "N") e (tri == "S"))) entao {
        rotacionar(300, negativo(90))
    }
}

###################################################################

tarefa levantarAtuador{
    velocidadeatuador(80)
    enquanto (anguloatuador() <= 88) farei {
        levantar(500)
        escrever(1, "levantando")
    }
}

###################################################################

tarefa baixarAtuador{
    enquanto (anguloatuador() >= 1) farei {
        baixar(500)
        escrever(1, "abaixando")
    }
}

###################################################################

tarefa pegar {
    enquanto (verdadeiro) farei {
        se (ultra(1) <= 215) entao {
            tras(200)
        }
        senao {
            se (temvitima()) entao {
                escrever(1, "tem vitima")
                gpsRobo()
                frenterotacao(50, 1)
                fechar(1000)
                levantarAtuador()
                orientar()
                enquanto (verdadeiro) farei {
                    se (ultra(1) > 10)entao{
                        se (cor(6) != "PRETO") entao {
                            frente(300)
                        }
                        senao {
                            rotacionar(500, negativo(45))
                            frenterotacao(300, 20)
                            rotacionar(500, negativo(90))
                            trasrotacao(300, 2)
                            baixarAtuador()
                            girarbaixo(1000)
                            girarcima(1000)
                            levantarAtuador()
                            frenterotacao(200, 0.5)
                            rotacionar(500, negativo(90))
                            trasrotacao(300, 20)
                            rotacionar(500, 45)
                            interromper()
                        }
                    }
                    senao{
                        ori()
                    }
                }
                interromper()
            }
            senao {
                enquanto (ultra(1) > 10) farei {
                    frente(300)
                }
                rotacionar(500, negativo(90))
                interromper()
            }
            interromper()
        }
    }
}

###################################################################

tarefa ProcurarBolinha {
    enquanto(verdadeiro) farei {
        se (temalgo(3, 5, 200)) entao {
            trasrotacao(300, 2)
            rotacionar(500, negativo(90))
            baixarAtuador()
            abrir(1000)
            pegar()   
        }
        senao {
            se (ultra(1) > 10) entao {
                frente(300)
            }
            senao {
                rotacionar (500, 89)
            }
        }

    }
}

###################################################################

tarefa achartriangulo {
    enquanto (verdadeiro) farei {
        se (cor(6) != "PRETO") entao {
            se (ultra(1) > 10) entao {
                frente(300)
            }
            senao {
                rotacionar (500, 89)
            }
        }
        senao {
            gpsTri()
            rotacionar(500, 45)
            frenterotacao(300, 50)
            rotacionar(500, 45)
            ProcurarBolinha()
            interromper()
        }   
    }
}

###################################################################

tarefa entrouArena {
    escrever(2,"to na arena")
    frenterotacao(300, 40)
    levantarAtuador()
    achartriangulo()
}

###################################################################

tarefa obstaculo {
    farei{
        direita(1000)
        escrevernumero(1,ultra(4))
    }enquanto(ultra(4) >  30)

    farei{
        frente(100)
        esperar(100)
        esquerda(300)
        esperar(200)
        escrever(1,"desviando")
    }enquanto(cor(5) == "BRANCO")

    frente(250)
    esperar(650)

    farei {
        direita(900)
        escrever(1,"linhaaa")
    }enquanto (cor(4) == "BRANCO")
}    

################################################################### 

tarefa curvaEsquerda1 {
    se ((cor(5) != "BRANCO")) entao{
        frente(250)
        esperar(740)
        se ((cor(3) == "PRETO") ou (cor(2) == "PRETO") ou (cor(4) == "PRETO") ou (cor(1) == "PRETO") ou (cor(5) == "PRETO")) entao{
            escrever(1,"tenho que ir reto esq")
            frente(130)
            esperar(720)
        } 
        senao{
            escrever(1,"virar para esquerda, curva de 90")
            rotacionar(500,negativo(90))
        }
        tras(200)
        esperar(400)
    } 
    senao {
        esquerda(900)
        escrever(1,"levemente virando para esquerda")
    }
}   

###################################################################

tarefa curvaEsquerda {
    se ((cor(4) != "BRANCO")) entao{
        frente(250)
        esperar(740)
        se ((cor(3) == "PRETO") ou (cor(2) == "PRETO") ou (cor(4) == "PRETO") ou (cor(1) == "PRETO") ou (cor(5) == "PRETO")) entao{
            escrever(1,"tenho que ir reto esq")
            frente(130)
            esperar(720)
        } 
        senao{
            escrever(1,"virar para esquerda, curva de 90")
            rotacionar(500,negativo(90))
        }
        tras(200)
        esperar(400)
    } 
    senao {
        esquerda(900)
        escrever(1,"levemente virando para esquerda")
    }
}   

###################################################################

tarefa curvaDireita1{
    se ((cor(1) != "BRANCO")) entao{
        esquerda(500)
        frente(250)
        esperar(740)
        se ((cor(3) == "PRETO") ou (cor(2) == "PRETO") ou (cor(4) == "PRETO") ou (cor(1) == "PRETO") ou (cor(5) == "PRETO")) entao{
            escrever(1,"tenho que ir reto dir")          
            frente(130)
            esperar(720)
        } 
        senao{
            escrever(1,"virar para direita, curva de 90")
            rotacionar(500,90)
        }
        tras(200)
        esperar(400)
    }
    senao {
        direita(800)
        escrever(1,"levemente virando para direita")
    }
}

###################################################################

tarefa curvaDireita{
    se ((cor(2) != "BRANCO")) entao{
        esquerda(500)
        frente(250)
        esperar(740)
        se ((cor(3) == "PRETO") ou (cor(2) == "PRETO") ou (cor(4) == "PRETO") ou (cor(1) == "PRETO") ou (cor(5) == "PRETO")) entao{
            escrever(1,"tenho que ir reto dir")          
            frente(130)
            esperar(720)
        } 
        senao{
            escrever(1,"virar para direita, curva de 90")
            rotacionar(500,90)
        }
        tras(200)
        esperar(400)
    }
    senao {
        direita(800)
        escrever(1,"levemente virando para direita")
    }
}

#############################################################################################################
#############################################################################################################

inicio 

    levantarAtuador()
    
    farei {
        se ((ultra(1) <= 6) e (luz(6) <= 60)) entao{
            obstaculo()
        }
        senao{

            se ((ultra(1) <=300) e (ultra(2) <=300) e( ultra(3) <=300) e (ultra(4) <=300) e (cor(2) == "BRANCO") e (cor(4) == "BRANCO") e (cor(1) == "BRANCO") e (cor(5) == "BRANCO") e (cor(3) == "BRANCO")) entao{
                entrouArena()
            }

            senao{

                se((cor(2) == "BRANCO") e (cor(4) == "BRANCO") e (cor(1) == "BRANCO") e (cor(5) == "BRANCO")) entao{
                    frente(200)
                }
            
                se ((cor(2) == "VERDE") ou (cor(1) == "VERDE")) entao{
                    escrever(1, "ok! eu vi um verde para a direita")
                    frente(300)
                    esperar(800)
                    rotacionar(500,40)
                    farei {
                        direita(1000)
                    }enquanto (cor(3) == "BRANCO")
                }



                se ((cor(4) == "VERDE") ou (cor(5) == "VERDE")) entao{
                    escrever(1, "ok! eu vi um verde para a esquerda")
                    frente(300)
                    esperar(800)
                    rotacionar(500,negativo(40))
                    farei {
                        esquerda(1000)
                    }enquanto (cor(3) == "BRANCO")
                }
        


                se((cor(2) == "BRANCO") e (cor(4) != "BRANCO")) entao{
                    curvaEsquerda1()
                }

                se((cor(2) == "BRANCO") e (cor(5) != "BRANCO")) entao{
                    curvaEsquerda()
                }

                se((cor(4) == "BRANCO") e (cor(2) != "BRANCO")) entao{
                    curvaDireita1()
                }

                se((cor(4) == "BRANCO") e (cor(1) != "BRANCO")) entao{
                    curvaDireita()
                }
            }
        }
    }enquanto (verdadeiro)

fim